--task13 (lesson3)
--Компьютерная фирма: Вывести список всех продуктов и производителя с указанием типа продукта (pc, printer, laptop). Вывести: model, maker, type
SELECT model, maker, type 
FROM product;
--task14 (lesson3)
--Компьютерная фирма: При выводе всех значений из таблицы printer дополнительно вывести для тех, у кого цена вышей средней PC - "1", у остальных - "0"
select *, case
	when price > (select avg(price) from pc)
	then 1
	else 0
	end as flag
from printer;
--task15 (lesson3)
--Корабли: Вывести список кораблей, у которых class отсутствует (IS NULL)
select ship 
from outcomes
where ship not in (select name from ships);
--task16 (lesson3)
--Корабли: Укажите сражения, которые произошли в годы, не совпадающие ни с одним из годов спуска кораблей на воду.
select name
from battles
where EXTRACT(YEAR FROM DATE ) not in (select launched from ships);
--task17 (lesson3)
--Корабли: Найдите сражения, в которых участвовали корабли класса Kongo из таблицы Ships.
select battle 
from outcomes 
where ship in (select name from ships where class='Kongo');
--task1  (lesson4)
-- Компьютерная фирма: Сделать view (название all_products_flag_300) для всех товаров (pc, printer, laptop) с флагом, если стоимость больше > 300. Во view три колонки: model, price, flag


create view all_products_flag_300 as
select model, price, case when price>300 then 1 else 0 end as flag from pc
union
select model, price, case when price>300 then 1 else 0 end as flag from printer
union
select model, price, case when price>300 then 1 else 0 end as flag from laptop;


--task2  (lesson4)
-- Компьютерная фирма: Сделать view (название all_products_flag_avg_price) для всех товаров (pc, printer, laptop) с флагом, если стоимость больше cредней . Во view три колонки: model, price, flag
create view all_products_flag_avg_price as
with all_products as (
	select model, price from pc
	union
	select model, price from printer
	union
	select model, price from laptop
	)
select *, case when price> (select avg(price) from all_products) then 1 else 0 end as flag
from all_products;
--task3  (lesson4)
-- Компьютерная фирма: Вывести все принтеры производителя = 'A' со стоимостью выше средней по принтерам производителя = 'D' и 'C'. Вывести model
with printers2 as (
	select maker, product.model, price
	from product 
	join printer
	on product.model=printer.model
	)
select model
from printers2
where maker='A' and price >(select avg(price) from printers2 where maker in ('C','D'));
--task4 (lesson4)
-- Компьютерная фирма: Вывести все товары производителя = 'A' со стоимостью выше средней по принтерам производителя = 'D' и 'C'. Вывести model
with printers2 as (
	select maker, product.model, price
	from product 
	join printer
	on product.model=printer.model
	)
select model
from printers2
where maker='A' and price >(select avg(price) from printers2 where maker in ('C','D'));
--task5 (lesson4)
-- Компьютерная фирма: Какая средняя цена среди уникальных продуктов производителя = 'A' (printer & laptop & pc)
with all_products as (
	select model, price from pc
	union
	select model, price from printer
	union
	select model, price from laptop
	)
select avg(price) 
from all_products
join product
on all_products.model=product.model
where maker='A';
--task6 (lesson4)
-- Компьютерная фирма: Сделать view с количеством товаров (название count_products_by_makers) по каждому производителю. Во view: maker, count


create view Count_products_by_makers2 as
select maker, count(model) as Count
from product
group by maker;
--task7 (lesson4)
-- По предыдущему view (count_products_by_makers) сделать график в colab (X: maker, y: count)
--done
--task8 (lesson4)
-- Компьютерная фирма: Сделать копию таблицы printer (название printer_updated) и удалить из нее все принтеры производителя 'D'
create table printer_updated as
select *
from printer
where model not in (select model from product where maker='D') ;
--task9 (lesson4)
-- Компьютерная фирма: Сделать на базе таблицы (printer_updated) view с дополнительной колонкой производителя (название printer_updated_with_makers)
create view printer_updated_with_makers as
select code, t1.model, color, t1.type, price, maker
from printer_updated t1
left join product t2
on t1.model=t2.model;
--task10 (lesson4)
-- Корабли: Сделать view c количеством потопленных кораблей и классом корабля (название sunk_ships_by_classes). Во view: count, class (если значения класса нет/IS NULL, то заменить на 0)
create view sunk_ships_by_classes as
select count(ship), class
from 
	(
	select ship, case when class is null then '0' else class end as class, result
	from outcomes t1
	left join ships t2
	on t2.name=t1.ship
	) s
group by class;
--task11 (lesson4)
-- Корабли: По предыдущему view (sunk_ships_by_classes) сделать график в colab (X: class, Y: count)
--done
select * from sunk_ships_by_classes;
--task12 (lesson4)
-- Корабли: Сделать копию таблицы classes (название classes_with_flag) и добавить в нее flag: если количество орудий больше или равно 9 - то 1, иначе 0
create table classes_with_flag as
select *, case when numguns >=9 then 1 else 0 end as flag
from classes;
--task13 (lesson4)
-- Корабли: Сделать график в colab по таблице classes с количеством классов по странам (X: country, Y: count)
--done
--task14 (lesson4)
-- Корабли: Вернуть количество кораблей, у которых название начинается с буквы "O" или "M".
select name
from (select name from ships union select ship from outcomes) s
where name like 'M%' or name like 'O%';
--task15 (lesson4)
-- Корабли: Вернуть количество кораблей, у которых название состоит из двух слов.
select count(name)
from (select name, LENgth(name) - LENgth(REPLACE(name, ' ', '')) + 1 as CountWords from ships union select ship, LENgth(ship) - LENgth(REPLACE(ship, ' ', '')) + 1 as CountWords from outcomes) s
where CountWords=2;
--task16 (lesson4)
-- Корабли: Построить график с количеством запущенных на воду кораблей и годом запуска (X: year, Y: count)




